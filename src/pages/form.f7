<template>
    <div class="page" data-name="form">
        <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner sliding">
                <div class="left">
                    <a href="#" class="link back">
                        <i class="icon icon-back"></i>
                        <span class="if-not-md">Retour</span>
                    </a>
                </div>
                <div class="title">Ajout Liste</div>
            </div>
        </div>
        <div class="page-content">
            <form class="list" id="my-form">
                <div class="block-title">Liste</div>
                <div class="list no-hairlines-md">
                    <ul>
                        <li>
                            <div class="item-content item-input">
                                <div class="item-inner">
                                    <div class="item-title item-label">Nom</div>
                                    <div class="item-input-wrap">
                                        <input class="listName required" name="nom" type="text" id="nameList"
                                            placeholder="Le nom de la liste" />
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </form>
            <div class="block-title page-content display-flex flex-direction-column justify-content-center">
                <div>
                    <a id="button-insert" class="button button-round button-fill button-insert" style="padding: 10px 0px;"><i class="f7-icons">checkmark_circle</i>Enregister</a>
                </div>
            </div>
        </div>
    </div>
</template>
<script>
    import Dom7 from 'Dom7';
    import Framework7 from 'framework7/bundle';
    export default (props, {$on, $f7 }) => {
        $on('pageInit', () => {
            var $$ = Dom7;

            Framework7.request.setup({
                headers: {
                    'Authorization': 'sometokenvalue'
                }
            })

            function addInvalidMsg(el, msg)
            {
                $$(el).closest(".item-content").addClass("item-input-with-error-message item-input-invalid");
                $$(el).addClass("input-invalid"); 
                $$( "<div class='item-input-error-message'>" +msg +"</div>" ).insertAfter( el );
            }

            $$('.button-insert').on('click', function () {
                var formData = $f7.form.convertToData('#my-form');
                if(formData.nom) {
                    Framework7.request.postJSON('http://localhost/licence/API_TodoList/list.php', formData).then(function (res) {
                        if(res) {
                            alert("L'insertion a bien été prise en compte")
                            $$('.listName').remove()
                            $$('.item-input-wrap').append("<input class='listName required' name='nom' type='text' id='nameList'placeholder='Le nom de la liste'/>")
                        }

                    }).catch(function (err) {
                        console.log(err.xhr)
                        console.log(err.status)
                        console.log(err.message)
                    })
                }
                else {
                    addInvalidMsg($$('.listName'), "Veuillez saisir un nom d'une liste !")
                }
            });
        });
        return $render;
    };
</script>